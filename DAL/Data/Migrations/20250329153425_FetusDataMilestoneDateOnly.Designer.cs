// <auto-generated />
using System;
using DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250329153425_FetusDataMilestoneDateOnly")]
    partial class FetusDataMilestoneDateOnly
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DAL.Entities.FetusData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<decimal>("HeadCircumference")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PregnancyId")
                        .HasColumnType("int");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("PregnancyId");

                    b.ToTable("FetusDatas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateOnly(2021, 1, 1),
                            HeadCircumference = 30.0m,
                            Height = 50.0m,
                            PregnancyId = 1,
                            Weight = 3.5m
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateOnly(2021, 2, 1),
                            HeadCircumference = 32.0m,
                            Height = 55.0m,
                            PregnancyId = 1,
                            Weight = 4.0m
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateOnly(2021, 1, 1),
                            HeadCircumference = 28.0m,
                            Height = 45.0m,
                            PregnancyId = 2,
                            Weight = 3.0m
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateOnly(2021, 2, 1),
                            HeadCircumference = 30.0m,
                            Height = 50.0m,
                            PregnancyId = 2,
                            Weight = 3.5m
                        });
                });

            modelBuilder.Entity("DAL.Entities.Milestone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Descriptions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PregnancyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PregnancyId");

                    b.ToTable("Milestones");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateOnly(2021, 1, 1),
                            Descriptions = "First Trimester",
                            PregnancyId = 1
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateOnly(2021, 4, 1),
                            Descriptions = "Second Trimester",
                            PregnancyId = 1
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateOnly(2021, 7, 1),
                            Descriptions = "Third Trimester",
                            PregnancyId = 1
                        });
                });

            modelBuilder.Entity("DAL.Entities.Pregnancy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("ConceptionDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("DueDate")
                        .HasColumnType("date");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Pregnancies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConceptionDate = new DateOnly(2021, 1, 1),
                            DueDate = new DateOnly(2021, 9, 1),
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            ConceptionDate = new DateOnly(2021, 2, 1),
                            DueDate = new DateOnly(2021, 10, 1),
                            UserId = 3
                        });
                });

            modelBuilder.Entity("DAL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool>("isAdmin")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@example.com",
                            Name = "Admin",
                            Password = "Admin@123",
                            Phone = "0905123456",
                            isActive = true,
                            isAdmin = true
                        },
                        new
                        {
                            Id = 2,
                            Email = "user1@example.com",
                            Name = "Elizabeth Taylor",
                            Password = "User1@123",
                            Phone = "0905123457",
                            isActive = true,
                            isAdmin = false
                        },
                        new
                        {
                            Id = 3,
                            Email = "user2@example.com",
                            Name = "Victoria Beckham",
                            Password = "User2@123",
                            Phone = "0905123458",
                            isActive = false,
                            isAdmin = false
                        });
                });

            modelBuilder.Entity("DAL.Entities.FetusData", b =>
                {
                    b.HasOne("DAL.Entities.Pregnancy", "Pregnancy")
                        .WithMany("FetusDatas")
                        .HasForeignKey("PregnancyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pregnancy");
                });

            modelBuilder.Entity("DAL.Entities.Milestone", b =>
                {
                    b.HasOne("DAL.Entities.Pregnancy", "Pregnancy")
                        .WithMany("Milestones")
                        .HasForeignKey("PregnancyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pregnancy");
                });

            modelBuilder.Entity("DAL.Entities.Pregnancy", b =>
                {
                    b.HasOne("DAL.Entities.User", "User")
                        .WithMany("Pregnancies")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Entities.Pregnancy", b =>
                {
                    b.Navigation("FetusDatas");

                    b.Navigation("Milestones");
                });

            modelBuilder.Entity("DAL.Entities.User", b =>
                {
                    b.Navigation("Pregnancies");
                });
#pragma warning restore 612, 618
        }
    }
}
